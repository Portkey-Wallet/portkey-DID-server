// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cross_chain_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Contracts.CrossChain {

  /// <summary>Holder for reflection information generated from cross_chain_contract.proto</summary>
  public static partial class CrossChainContractReflection {

    #region Descriptor
    /// <summary>File descriptor for cross_chain_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CrossChainContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chpjcm9zc19jaGFpbl9jb250cmFjdC5wcm90bxIKQ3Jvc3NDaGFpbhoKYWNz",
            "Ny5wcm90bxoSYWVsZi9vcHRpb25zLnByb3RvGhtnb29nbGUvcHJvdG9idWYv",
            "ZW1wdHkucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90bxoU",
            "YXV0aG9yaXR5X2luZm8ucHJvdG8icwoPSW5pdGlhbGl6ZUlucHV0EhcKD3Bh",
            "cmVudF9jaGFpbl9pZBgBIAEoBRInCh9jcmVhdGlvbl9oZWlnaHRfb25fcGFy",
            "ZW50X2NoYWluGAIgASgDEh4KFmlzX3ByaXZpbGVnZV9wcmVzZXJ2ZWQYAyAB",
            "KAgiTgoVU2lkZUNoYWluQ3JlYXRlZEV2ZW50Eh4KB2NyZWF0b3IYASABKAsy",
            "DS5hZWxmLkFkZHJlc3MSDwoHY2hhaW5JZBgCIAEoBToEoLsYASIiCghEaXNw",
            "b3NlZBIQCghjaGFpbl9pZBgBIAEoBToEoLsYASKDAgoaUHJvcG9zZWRDcm9z",
            "c0NoYWluSW5kZXhpbmcSeQojY2hhaW5faW5kZXhpbmdfcHJvcG9zYWxfY29s",
            "bGVjdGlvbnMYASADKAsyTC5Dcm9zc0NoYWluLlByb3Bvc2VkQ3Jvc3NDaGFp",
            "bkluZGV4aW5nLkNoYWluSW5kZXhpbmdQcm9wb3NhbENvbGxlY3Rpb25zRW50",
            "cnkaagolQ2hhaW5JbmRleGluZ1Byb3Bvc2FsQ29sbGVjdGlvbnNFbnRyeRIL",
            "CgNrZXkYASABKAUSMAoFdmFsdWUYAiABKAsyIS5Dcm9zc0NoYWluLkNoYWlu",
            "SW5kZXhpbmdQcm9wb3NhbDoCOAEi7QEKFUNoYWluSW5kZXhpbmdQcm9wb3Nh",
            "bBIfCgtwcm9wb3NhbF9pZBgBIAEoCzIKLmFlbGYuSGFzaBIfCghwcm9wb3Nl",
            "chgCIAEoCzINLmFlbGYuQWRkcmVzcxJCCh9wcm9wb3NlZF9jcm9zc19jaGFp",
            "bl9ibG9ja19kYXRhGAMgASgLMhkuYWNzNy5Dcm9zc0NoYWluQmxvY2tEYXRh",
            "EjwKBnN0YXR1cxgEIAEoDjIsLkNyb3NzQ2hhaW4uQ3Jvc3NDaGFpbkluZGV4",
            "aW5nUHJvcG9zYWxTdGF0dXMSEAoIY2hhaW5faWQYBSABKAUiiwIKH0dldElu",
            "ZGV4aW5nUHJvcG9zYWxTdGF0dXNPdXRwdXQSdAoeY2hhaW5faW5kZXhpbmdf",
            "cHJvcG9zYWxfc3RhdHVzGAEgAygLMkwuQ3Jvc3NDaGFpbi5HZXRJbmRleGlu",
            "Z1Byb3Bvc2FsU3RhdHVzT3V0cHV0LkNoYWluSW5kZXhpbmdQcm9wb3NhbFN0",
            "YXR1c0VudHJ5GnIKIENoYWluSW5kZXhpbmdQcm9wb3NhbFN0YXR1c0VudHJ5",
            "EgsKA2tleRgBIAEoBRI9CgV2YWx1ZRgCIAEoCzIuLkNyb3NzQ2hhaW4uUGVu",
            "ZGluZ0NoYWluSW5kZXhpbmdQcm9wb3NhbFN0YXR1czoCOAEi9AEKIlBlbmRp",
            "bmdDaGFpbkluZGV4aW5nUHJvcG9zYWxTdGF0dXMSHwoLcHJvcG9zYWxfaWQY",
            "ASABKAsyCi5hZWxmLkhhc2gSHwoIcHJvcG9zZXIYAiABKAsyDS5hZWxmLkFk",
            "ZHJlc3MSFgoOdG9fYmVfcmVsZWFzZWQYAyABKAgSQgofcHJvcG9zZWRfY3Jv",
            "c3NfY2hhaW5fYmxvY2tfZGF0YRgEIAEoCzIZLmFjczcuQ3Jvc3NDaGFpbkJs",
            "b2NrRGF0YRIwCgxleHBpcmVkX3RpbWUYBSABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wIvwBCipHZXRQZW5kaW5nQ3Jvc3NDaGFpbkluZGV4aW5n",
            "UHJvcG9zYWxPdXRwdXQSHwoLcHJvcG9zYWxfaWQYASABKAsyCi5hZWxmLkhh",
            "c2gSHwoIcHJvcG9zZXIYAiABKAsyDS5hZWxmLkFkZHJlc3MSFgoOdG9fYmVf",
            "cmVsZWFzZWQYAyABKAgSQgofcHJvcG9zZWRfY3Jvc3NfY2hhaW5fYmxvY2tf",
            "ZGF0YRgEIAEoCzIZLmFjczcuQ3Jvc3NDaGFpbkJsb2NrRGF0YRIwCgxleHBp",
            "cmVkX3RpbWUYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIr8D",
            "Cg1TaWRlQ2hhaW5JbmZvEh8KCHByb3Bvc2VyGAEgASgLMg0uYWVsZi5BZGRy",
            "ZXNzEjYKEXNpZGVfY2hhaW5fc3RhdHVzGAIgASgOMhsuQ3Jvc3NDaGFpbi5T",
            "aWRlQ2hhaW5TdGF0dXMSFQoNc2lkZV9jaGFpbl9pZBgDIAEoBRI2ChJjcmVh",
            "dGlvbl90aW1lc3RhbXAYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wEicKH2NyZWF0aW9uX2hlaWdodF9vbl9wYXJlbnRfY2hhaW4YBSABKAMS",
            "FgoOaW5kZXhpbmdfcHJpY2UYBiABKAMSHgoWaXNfcHJpdmlsZWdlX3ByZXNl",
            "cnZlZBgHIAEoCBJACgxhcnJlYXJzX2luZm8YCCADKAsyKi5Dcm9zc0NoYWlu",
            "LlNpZGVDaGFpbkluZm8uQXJyZWFyc0luZm9FbnRyeRIvChdpbmRleGluZ19m",
            "ZWVfY29udHJvbGxlchgJIAEoCzIOLkF1dGhvcml0eUluZm8aMgoQQXJyZWFy",
            "c0luZm9FbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAM6AjgBIkMK",
            "FEdldENoYWluU3RhdHVzT3V0cHV0EisKBnN0YXR1cxgBIAEoDjIbLkNyb3Nz",
            "Q2hhaW4uU2lkZUNoYWluU3RhdHVzIrcBCh1TaWRlQ2hhaW5DcmVhdGlvblJl",
            "cXVlc3RTdGF0ZRJDChtzaWRlX2NoYWluX2NyZWF0aW9uX3JlcXVlc3QYASAB",
            "KAsyHi5hY3M3LlNpZGVDaGFpbkNyZWF0aW9uUmVxdWVzdBIwCgxleHBpcmVk",
            "X3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEh8KCHBy",
            "b3Bvc2VyGAMgASgLMg0uYWVsZi5BZGRyZXNzImUKKUNoYW5nZVNpZGVDaGFp",
            "bkluZGV4aW5nRmVlQ29udHJvbGxlcklucHV0EhAKCGNoYWluX2lkGAEgASgF",
            "EiYKDmF1dGhvcml0eV9pbmZvGAIgASgLMg4uQXV0aG9yaXR5SW5mbyJSCiJT",
            "aWRlQ2hhaW5MaWZldGltZUNvbnRyb2xsZXJDaGFuZ2VkEiYKDmF1dGhvcml0",
            "eV9pbmZvGAEgASgLMg4uQXV0aG9yaXR5SW5mbzoEoLsYASJTCiNDcm9zc0No",
            "YWluSW5kZXhpbmdDb250cm9sbGVyQ2hhbmdlZBImCg5hdXRob3JpdHlfaW5m",
            "bxgBIAEoCzIOLkF1dGhvcml0eUluZm86BKC7GAEibgolU2lkZUNoYWluSW5k",
            "ZXhpbmdGZWVDb250cm9sbGVyQ2hhbmdlZBIXCghjaGFpbl9pZBgBIAEoBUIF",
            "iI/1AQESJgoOYXV0aG9yaXR5X2luZm8YAiABKAsyDi5BdXRob3JpdHlJbmZv",
            "OgSguxgBIjkKJUFjY2VwdENyb3NzQ2hhaW5JbmRleGluZ1Byb3Bvc2FsSW5w",
            "dXQSEAoIY2hhaW5faWQYASABKAUiSQoQU2lkZUNoYWluSW5kZXhlZBIXCghj",
            "aGFpbl9pZBgBIAEoBUIFiI/1AQESFgoOaW5kZXhlZF9oZWlnaHQYAiABKAM6",
            "BKC7GAEiSwoSUGFyZW50Q2hhaW5JbmRleGVkEhcKCGNoYWluX2lkGAEgASgF",
            "QgWIj/UBARIWCg5pbmRleGVkX2hlaWdodBgCIAEoAzoEoLsYASpPCiBDcm9z",
            "c0NoYWluSW5kZXhpbmdQcm9wb3NhbFN0YXR1cxIQCgxOT05fUFJPUE9TRUQQ",
            "ABILCgdQRU5ESU5HEAESDAoIQUNDRVBURUQQAipPCg9TaWRlQ2hhaW5TdGF0",
            "dXMSCQoFRkFUQUwQABIKCgZBQ1RJVkUQARIVChFJTkRFWElOR19GRUVfREVC",
            "VBACEg4KClRFUk1JTkFURUQQAzLeDQoSQ3Jvc3NDaGFpbkNvbnRyYWN0EkMK",
            "CkluaXRpYWxpemUSGy5Dcm9zc0NoYWluLkluaXRpYWxpemVJbnB1dBoWLmdv",
            "b2dsZS5wcm90b2J1Zi5FbXB0eSIAElcKLFNldEluaXRpYWxTaWRlQ2hhaW5M",
            "aWZldGltZUNvbnRyb2xsZXJBZGRyZXNzEg0uYWVsZi5BZGRyZXNzGhYuZ29v",
            "Z2xlLnByb3RvYnVmLkVtcHR5IgASTgojU2V0SW5pdGlhbEluZGV4aW5nQ29u",
            "dHJvbGxlckFkZHJlc3MSDS5hZWxmLkFkZHJlc3MaFi5nb29nbGUucHJvdG9i",
            "dWYuRW1wdHkiABJOCiJDaGFuZ2VDcm9zc0NoYWluSW5kZXhpbmdDb250cm9s",
            "bGVyEg4uQXV0aG9yaXR5SW5mbxoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIA",
            "Ek0KIUNoYW5nZVNpZGVDaGFpbkxpZmV0aW1lQ29udHJvbGxlchIOLkF1dGhv",
            "cml0eUluZm8aFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJ3CiRDaGFuZ2VT",
            "aWRlQ2hhaW5JbmRleGluZ0ZlZUNvbnRyb2xsZXISNS5Dcm9zc0NoYWluLkNo",
            "YW5nZVNpZGVDaGFpbkluZGV4aW5nRmVlQ29udHJvbGxlcklucHV0GhYuZ29v",
            "Z2xlLnByb3RvYnVmLkVtcHR5IgASbwogQWNjZXB0Q3Jvc3NDaGFpbkluZGV4",
            "aW5nUHJvcG9zYWwSMS5Dcm9zc0NoYWluLkFjY2VwdENyb3NzQ2hhaW5JbmRl",
            "eGluZ1Byb3Bvc2FsSW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJI",
            "ChNHZXRTaWRlQ2hhaW5DcmVhdG9yEhsuZ29vZ2xlLnByb3RvYnVmLkludDMy",
            "VmFsdWUaDS5hZWxmLkFkZHJlc3MiBYiJ9wEBElYKDkdldENoYWluU3RhdHVz",
            "EhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUaIC5Dcm9zc0NoYWluLkdl",
            "dENoYWluU3RhdHVzT3V0cHV0IgWIifcBARJVChJHZXRTaWRlQ2hhaW5IZWln",
            "aHQSGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRobLmdvb2dsZS5wcm90",
            "b2J1Zi5JbnQ2NFZhbHVlIgWIifcBARJSChRHZXRQYXJlbnRDaGFpbkhlaWdo",
            "dBIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRobLmdvb2dsZS5wcm90b2J1Zi5J",
            "bnQ2NFZhbHVlIgWIifcBARJOChBHZXRQYXJlbnRDaGFpbklkEhYuZ29vZ2xl",
            "LnByb3RvYnVmLkVtcHR5GhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUi",
            "BYiJ9wEBElYKE0dldFNpZGVDaGFpbkJhbGFuY2USGy5nb29nbGUucHJvdG9i",
            "dWYuSW50MzJWYWx1ZRobLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlIgWI",
            "ifcBARJeChtHZXRTaWRlQ2hhaW5JbmRleGluZ0ZlZURlYnQSGy5nb29nbGUu",
            "cHJvdG9idWYuSW50MzJWYWx1ZRobLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZh",
            "bHVlIgWIifcBARJnChlHZXRJbmRleGluZ1Byb3Bvc2FsU3RhdHVzEhYuZ29v",
            "Z2xlLnByb3RvYnVmLkVtcHR5GisuQ3Jvc3NDaGFpbi5HZXRJbmRleGluZ1By",
            "b3Bvc2FsU3RhdHVzT3V0cHV0IgWIifcBARJfChxHZXRTaWRlQ2hhaW5JbmRl",
            "eGluZ0ZlZVByaWNlEhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUaGy5n",
            "b29nbGUucHJvdG9idWYuSW50NjRWYWx1ZSIFiIn3AQESTwoeR2V0U2lkZUNo",
            "YWluTGlmZXRpbWVDb250cm9sbGVyEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5",
            "Gg4uQXV0aG9yaXR5SW5mbyIFiIn3AQESUAofR2V0Q3Jvc3NDaGFpbkluZGV4",
            "aW5nQ29udHJvbGxlchIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoOLkF1dGhv",
            "cml0eUluZm8iBYiJ9wEBElcKIUdldFNpZGVDaGFpbkluZGV4aW5nRmVlQ29u",
            "dHJvbGxlchIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlGg4uQXV0aG9y",
            "aXR5SW5mbyIFiIn3AQEaNrLM9gExQUVsZi5Db250cmFjdHMuQ3Jvc3NDaGFp",
            "bi5Dcm9zc0NoYWluQ29udHJhY3RTdGF0ZUIcqgIZQUVsZi5Db250cmFjdHMu",
            "Q3Jvc3NDaGFpbmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Standards.ACS7.Acs7Reflection.Descriptor, global::AElf.OptionsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::AuthorityInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::AElf.Contracts.CrossChain.CrossChainIndexingProposalStatus), typeof(global::AElf.Contracts.CrossChain.SideChainStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.InitializeInput), global::AElf.Contracts.CrossChain.InitializeInput.Parser, new[]{ "ParentChainId", "CreationHeightOnParentChain", "IsPrivilegePreserved" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.SideChainCreatedEvent), global::AElf.Contracts.CrossChain.SideChainCreatedEvent.Parser, new[]{ "Creator", "ChainId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.Disposed), global::AElf.Contracts.CrossChain.Disposed.Parser, new[]{ "ChainId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.ProposedCrossChainIndexing), global::AElf.Contracts.CrossChain.ProposedCrossChainIndexing.Parser, new[]{ "ChainIndexingProposalCollections" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.ChainIndexingProposal), global::AElf.Contracts.CrossChain.ChainIndexingProposal.Parser, new[]{ "ProposalId", "Proposer", "ProposedCrossChainBlockData", "Status", "ChainId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.GetIndexingProposalStatusOutput), global::AElf.Contracts.CrossChain.GetIndexingProposalStatusOutput.Parser, new[]{ "ChainIndexingProposalStatus" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.PendingChainIndexingProposalStatus), global::AElf.Contracts.CrossChain.PendingChainIndexingProposalStatus.Parser, new[]{ "ProposalId", "Proposer", "ToBeReleased", "ProposedCrossChainBlockData", "ExpiredTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.GetPendingCrossChainIndexingProposalOutput), global::AElf.Contracts.CrossChain.GetPendingCrossChainIndexingProposalOutput.Parser, new[]{ "ProposalId", "Proposer", "ToBeReleased", "ProposedCrossChainBlockData", "ExpiredTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.SideChainInfo), global::AElf.Contracts.CrossChain.SideChainInfo.Parser, new[]{ "Proposer", "SideChainStatus", "SideChainId", "CreationTimestamp", "CreationHeightOnParentChain", "IndexingPrice", "IsPrivilegePreserved", "ArrearsInfo", "IndexingFeeController" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.GetChainStatusOutput), global::AElf.Contracts.CrossChain.GetChainStatusOutput.Parser, new[]{ "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.SideChainCreationRequestState), global::AElf.Contracts.CrossChain.SideChainCreationRequestState.Parser, new[]{ "SideChainCreationRequest", "ExpiredTime", "Proposer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.ChangeSideChainIndexingFeeControllerInput), global::AElf.Contracts.CrossChain.ChangeSideChainIndexingFeeControllerInput.Parser, new[]{ "ChainId", "AuthorityInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.SideChainLifetimeControllerChanged), global::AElf.Contracts.CrossChain.SideChainLifetimeControllerChanged.Parser, new[]{ "AuthorityInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.CrossChainIndexingControllerChanged), global::AElf.Contracts.CrossChain.CrossChainIndexingControllerChanged.Parser, new[]{ "AuthorityInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.SideChainIndexingFeeControllerChanged), global::AElf.Contracts.CrossChain.SideChainIndexingFeeControllerChanged.Parser, new[]{ "ChainId", "AuthorityInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.AcceptCrossChainIndexingProposalInput), global::AElf.Contracts.CrossChain.AcceptCrossChainIndexingProposalInput.Parser, new[]{ "ChainId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.SideChainIndexed), global::AElf.Contracts.CrossChain.SideChainIndexed.Parser, new[]{ "ChainId", "IndexedHeight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.CrossChain.ParentChainIndexed), global::AElf.Contracts.CrossChain.ParentChainIndexed.Parser, new[]{ "ChainId", "IndexedHeight" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CrossChainIndexingProposalStatus {
    [pbr::OriginalName("NON_PROPOSED")] NonProposed = 0,
    /// <summary>
    /// The proposal is pending.
    /// </summary>
    [pbr::OriginalName("PENDING")] Pending = 1,
    /// <summary>
    /// The proposal has been released.
    /// </summary>
    [pbr::OriginalName("ACCEPTED")] Accepted = 2,
  }

  public enum SideChainStatus {
    /// <summary>
    /// Currently no meaning.
    /// </summary>
    [pbr::OriginalName("FATAL")] Fatal = 0,
    /// <summary>
    /// The side chain is being indexed.
    /// </summary>
    [pbr::OriginalName("ACTIVE")] Active = 1,
    /// <summary>
    /// The side chain is in debt for indexing fee.
    /// </summary>
    [pbr::OriginalName("INDEXING_FEE_DEBT")] IndexingFeeDebt = 2,
    /// <summary>
    /// The side chain is disposed.
    /// </summary>
    [pbr::OriginalName("TERMINATED")] Terminated = 3,
  }

  #endregion

  #region Messages
  public sealed partial class InitializeInput : pb::IMessage<InitializeInput> {
    private static readonly pb::MessageParser<InitializeInput> _parser = new pb::MessageParser<InitializeInput>(() => new InitializeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitializeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput(InitializeInput other) : this() {
      parentChainId_ = other.parentChainId_;
      creationHeightOnParentChain_ = other.creationHeightOnParentChain_;
      isPrivilegePreserved_ = other.isPrivilegePreserved_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitializeInput Clone() {
      return new InitializeInput(this);
    }

    /// <summary>Field number for the "parent_chain_id" field.</summary>
    public const int ParentChainIdFieldNumber = 1;
    private int parentChainId_;
    /// <summary>
    /// The id of parent chain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ParentChainId {
      get { return parentChainId_; }
      set {
        parentChainId_ = value;
      }
    }

    /// <summary>Field number for the "creation_height_on_parent_chain" field.</summary>
    public const int CreationHeightOnParentChainFieldNumber = 2;
    private long creationHeightOnParentChain_;
    /// <summary>
    /// The height of side chain created on parent chain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreationHeightOnParentChain {
      get { return creationHeightOnParentChain_; }
      set {
        creationHeightOnParentChain_ = value;
      }
    }

    /// <summary>Field number for the "is_privilege_preserved" field.</summary>
    public const int IsPrivilegePreservedFieldNumber = 3;
    private bool isPrivilegePreserved_;
    /// <summary>
    /// True if chain privilege needed, otherwise false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPrivilegePreserved {
      get { return isPrivilegePreserved_; }
      set {
        isPrivilegePreserved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitializeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitializeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParentChainId != other.ParentChainId) return false;
      if (CreationHeightOnParentChain != other.CreationHeightOnParentChain) return false;
      if (IsPrivilegePreserved != other.IsPrivilegePreserved) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParentChainId != 0) hash ^= ParentChainId.GetHashCode();
      if (CreationHeightOnParentChain != 0L) hash ^= CreationHeightOnParentChain.GetHashCode();
      if (IsPrivilegePreserved != false) hash ^= IsPrivilegePreserved.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParentChainId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ParentChainId);
      }
      if (CreationHeightOnParentChain != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CreationHeightOnParentChain);
      }
      if (IsPrivilegePreserved != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsPrivilegePreserved);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParentChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ParentChainId);
      }
      if (CreationHeightOnParentChain != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreationHeightOnParentChain);
      }
      if (IsPrivilegePreserved != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitializeInput other) {
      if (other == null) {
        return;
      }
      if (other.ParentChainId != 0) {
        ParentChainId = other.ParentChainId;
      }
      if (other.CreationHeightOnParentChain != 0L) {
        CreationHeightOnParentChain = other.CreationHeightOnParentChain;
      }
      if (other.IsPrivilegePreserved != false) {
        IsPrivilegePreserved = other.IsPrivilegePreserved;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ParentChainId = input.ReadInt32();
            break;
          }
          case 16: {
            CreationHeightOnParentChain = input.ReadInt64();
            break;
          }
          case 24: {
            IsPrivilegePreserved = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SideChainCreatedEvent : pb::IMessage<SideChainCreatedEvent> {
    private static readonly pb::MessageParser<SideChainCreatedEvent> _parser = new pb::MessageParser<SideChainCreatedEvent>(() => new SideChainCreatedEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SideChainCreatedEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainCreatedEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainCreatedEvent(SideChainCreatedEvent other) : this() {
      creator_ = other.creator_ != null ? other.creator_.Clone() : null;
      chainId_ = other.chainId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainCreatedEvent Clone() {
      return new SideChainCreatedEvent(this);
    }

    /// <summary>Field number for the "creator" field.</summary>
    public const int CreatorFieldNumber = 1;
    private global::AElf.Types.Address creator_;
    /// <summary>
    /// The proposer who propose to create the side chain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Creator {
      get { return creator_; }
      set {
        creator_ = value;
      }
    }

    /// <summary>Field number for the "chainId" field.</summary>
    public const int ChainIdFieldNumber = 2;
    private int chainId_;
    /// <summary>
    /// The created side chain id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChainId {
      get { return chainId_; }
      set {
        chainId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SideChainCreatedEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SideChainCreatedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Creator, other.Creator)) return false;
      if (ChainId != other.ChainId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (creator_ != null) hash ^= Creator.GetHashCode();
      if (ChainId != 0) hash ^= ChainId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (creator_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Creator);
      }
      if (ChainId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChainId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (creator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Creator);
      }
      if (ChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChainId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SideChainCreatedEvent other) {
      if (other == null) {
        return;
      }
      if (other.creator_ != null) {
        if (creator_ == null) {
          Creator = new global::AElf.Types.Address();
        }
        Creator.MergeFrom(other.Creator);
      }
      if (other.ChainId != 0) {
        ChainId = other.ChainId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (creator_ == null) {
              Creator = new global::AElf.Types.Address();
            }
            input.ReadMessage(Creator);
            break;
          }
          case 16: {
            ChainId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Disposed : pb::IMessage<Disposed> {
    private static readonly pb::MessageParser<Disposed> _parser = new pb::MessageParser<Disposed>(() => new Disposed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Disposed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Disposed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Disposed(Disposed other) : this() {
      chainId_ = other.chainId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Disposed Clone() {
      return new Disposed(this);
    }

    /// <summary>Field number for the "chain_id" field.</summary>
    public const int ChainIdFieldNumber = 1;
    private int chainId_;
    /// <summary>
    /// The disposed side chain id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChainId {
      get { return chainId_; }
      set {
        chainId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Disposed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Disposed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChainId != other.ChainId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChainId != 0) hash ^= ChainId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChainId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChainId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChainId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Disposed other) {
      if (other == null) {
        return;
      }
      if (other.ChainId != 0) {
        ChainId = other.ChainId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChainId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProposedCrossChainIndexing : pb::IMessage<ProposedCrossChainIndexing> {
    private static readonly pb::MessageParser<ProposedCrossChainIndexing> _parser = new pb::MessageParser<ProposedCrossChainIndexing>(() => new ProposedCrossChainIndexing());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProposedCrossChainIndexing> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposedCrossChainIndexing() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposedCrossChainIndexing(ProposedCrossChainIndexing other) : this() {
      chainIndexingProposalCollections_ = other.chainIndexingProposalCollections_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposedCrossChainIndexing Clone() {
      return new ProposedCrossChainIndexing(this);
    }

    /// <summary>Field number for the "chain_indexing_proposal_collections" field.</summary>
    public const int ChainIndexingProposalCollectionsFieldNumber = 1;
    private static readonly pbc::MapField<int, global::AElf.Contracts.CrossChain.ChainIndexingProposal>.Codec _map_chainIndexingProposalCollections_codec
        = new pbc::MapField<int, global::AElf.Contracts.CrossChain.ChainIndexingProposal>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::AElf.Contracts.CrossChain.ChainIndexingProposal.Parser), 10);
    private readonly pbc::MapField<int, global::AElf.Contracts.CrossChain.ChainIndexingProposal> chainIndexingProposalCollections_ = new pbc::MapField<int, global::AElf.Contracts.CrossChain.ChainIndexingProposal>();
    /// <summary>
    /// The collection of chain indexing proposal, the key is chain id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::AElf.Contracts.CrossChain.ChainIndexingProposal> ChainIndexingProposalCollections {
      get { return chainIndexingProposalCollections_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProposedCrossChainIndexing);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProposedCrossChainIndexing other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ChainIndexingProposalCollections.Equals(other.ChainIndexingProposalCollections)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ChainIndexingProposalCollections.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      chainIndexingProposalCollections_.WriteTo(output, _map_chainIndexingProposalCollections_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += chainIndexingProposalCollections_.CalculateSize(_map_chainIndexingProposalCollections_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProposedCrossChainIndexing other) {
      if (other == null) {
        return;
      }
      chainIndexingProposalCollections_.Add(other.chainIndexingProposalCollections_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            chainIndexingProposalCollections_.AddEntriesFrom(input, _map_chainIndexingProposalCollections_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChainIndexingProposal : pb::IMessage<ChainIndexingProposal> {
    private static readonly pb::MessageParser<ChainIndexingProposal> _parser = new pb::MessageParser<ChainIndexingProposal>(() => new ChainIndexingProposal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChainIndexingProposal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChainIndexingProposal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChainIndexingProposal(ChainIndexingProposal other) : this() {
      proposalId_ = other.proposalId_ != null ? other.proposalId_.Clone() : null;
      proposer_ = other.proposer_ != null ? other.proposer_.Clone() : null;
      proposedCrossChainBlockData_ = other.proposedCrossChainBlockData_ != null ? other.proposedCrossChainBlockData_.Clone() : null;
      status_ = other.status_;
      chainId_ = other.chainId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChainIndexingProposal Clone() {
      return new ChainIndexingProposal(this);
    }

    /// <summary>Field number for the "proposal_id" field.</summary>
    public const int ProposalIdFieldNumber = 1;
    private global::AElf.Types.Hash proposalId_;
    /// <summary>
    /// The id of cross chain indexing proposal.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash ProposalId {
      get { return proposalId_; }
      set {
        proposalId_ = value;
      }
    }

    /// <summary>Field number for the "proposer" field.</summary>
    public const int ProposerFieldNumber = 2;
    private global::AElf.Types.Address proposer_;
    /// <summary>
    /// The proposer of cross chain indexing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Proposer {
      get { return proposer_; }
      set {
        proposer_ = value;
      }
    }

    /// <summary>Field number for the "proposed_cross_chain_block_data" field.</summary>
    public const int ProposedCrossChainBlockDataFieldNumber = 3;
    private global::AElf.Standards.ACS7.CrossChainBlockData proposedCrossChainBlockData_;
    /// <summary>
    /// The cross chain data proposed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Standards.ACS7.CrossChainBlockData ProposedCrossChainBlockData {
      get { return proposedCrossChainBlockData_; }
      set {
        proposedCrossChainBlockData_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::AElf.Contracts.CrossChain.CrossChainIndexingProposalStatus status_ = global::AElf.Contracts.CrossChain.CrossChainIndexingProposalStatus.NonProposed;
    /// <summary>
    /// The status of of cross chain indexing proposal.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Contracts.CrossChain.CrossChainIndexingProposalStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "chain_id" field.</summary>
    public const int ChainIdFieldNumber = 5;
    private int chainId_;
    /// <summary>
    /// The chain id of the indexing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChainId {
      get { return chainId_; }
      set {
        chainId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChainIndexingProposal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChainIndexingProposal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ProposalId, other.ProposalId)) return false;
      if (!object.Equals(Proposer, other.Proposer)) return false;
      if (!object.Equals(ProposedCrossChainBlockData, other.ProposedCrossChainBlockData)) return false;
      if (Status != other.Status) return false;
      if (ChainId != other.ChainId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (proposalId_ != null) hash ^= ProposalId.GetHashCode();
      if (proposer_ != null) hash ^= Proposer.GetHashCode();
      if (proposedCrossChainBlockData_ != null) hash ^= ProposedCrossChainBlockData.GetHashCode();
      if (Status != global::AElf.Contracts.CrossChain.CrossChainIndexingProposalStatus.NonProposed) hash ^= Status.GetHashCode();
      if (ChainId != 0) hash ^= ChainId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (proposalId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProposalId);
      }
      if (proposer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Proposer);
      }
      if (proposedCrossChainBlockData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ProposedCrossChainBlockData);
      }
      if (Status != global::AElf.Contracts.CrossChain.CrossChainIndexingProposalStatus.NonProposed) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (ChainId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ChainId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (proposalId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProposalId);
      }
      if (proposer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proposer);
      }
      if (proposedCrossChainBlockData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProposedCrossChainBlockData);
      }
      if (Status != global::AElf.Contracts.CrossChain.CrossChainIndexingProposalStatus.NonProposed) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (ChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChainId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChainIndexingProposal other) {
      if (other == null) {
        return;
      }
      if (other.proposalId_ != null) {
        if (proposalId_ == null) {
          ProposalId = new global::AElf.Types.Hash();
        }
        ProposalId.MergeFrom(other.ProposalId);
      }
      if (other.proposer_ != null) {
        if (proposer_ == null) {
          Proposer = new global::AElf.Types.Address();
        }
        Proposer.MergeFrom(other.Proposer);
      }
      if (other.proposedCrossChainBlockData_ != null) {
        if (proposedCrossChainBlockData_ == null) {
          ProposedCrossChainBlockData = new global::AElf.Standards.ACS7.CrossChainBlockData();
        }
        ProposedCrossChainBlockData.MergeFrom(other.ProposedCrossChainBlockData);
      }
      if (other.Status != global::AElf.Contracts.CrossChain.CrossChainIndexingProposalStatus.NonProposed) {
        Status = other.Status;
      }
      if (other.ChainId != 0) {
        ChainId = other.ChainId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (proposalId_ == null) {
              ProposalId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(ProposalId);
            break;
          }
          case 18: {
            if (proposer_ == null) {
              Proposer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Proposer);
            break;
          }
          case 26: {
            if (proposedCrossChainBlockData_ == null) {
              ProposedCrossChainBlockData = new global::AElf.Standards.ACS7.CrossChainBlockData();
            }
            input.ReadMessage(ProposedCrossChainBlockData);
            break;
          }
          case 32: {
            Status = (global::AElf.Contracts.CrossChain.CrossChainIndexingProposalStatus) input.ReadEnum();
            break;
          }
          case 40: {
            ChainId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetIndexingProposalStatusOutput : pb::IMessage<GetIndexingProposalStatusOutput> {
    private static readonly pb::MessageParser<GetIndexingProposalStatusOutput> _parser = new pb::MessageParser<GetIndexingProposalStatusOutput>(() => new GetIndexingProposalStatusOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetIndexingProposalStatusOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetIndexingProposalStatusOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetIndexingProposalStatusOutput(GetIndexingProposalStatusOutput other) : this() {
      chainIndexingProposalStatus_ = other.chainIndexingProposalStatus_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetIndexingProposalStatusOutput Clone() {
      return new GetIndexingProposalStatusOutput(this);
    }

    /// <summary>Field number for the "chain_indexing_proposal_status" field.</summary>
    public const int ChainIndexingProposalStatusFieldNumber = 1;
    private static readonly pbc::MapField<int, global::AElf.Contracts.CrossChain.PendingChainIndexingProposalStatus>.Codec _map_chainIndexingProposalStatus_codec
        = new pbc::MapField<int, global::AElf.Contracts.CrossChain.PendingChainIndexingProposalStatus>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::AElf.Contracts.CrossChain.PendingChainIndexingProposalStatus.Parser), 10);
    private readonly pbc::MapField<int, global::AElf.Contracts.CrossChain.PendingChainIndexingProposalStatus> chainIndexingProposalStatus_ = new pbc::MapField<int, global::AElf.Contracts.CrossChain.PendingChainIndexingProposalStatus>();
    /// <summary>
    /// The collection of pending indexing proposal, the key is chain id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::AElf.Contracts.CrossChain.PendingChainIndexingProposalStatus> ChainIndexingProposalStatus {
      get { return chainIndexingProposalStatus_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetIndexingProposalStatusOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetIndexingProposalStatusOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ChainIndexingProposalStatus.Equals(other.ChainIndexingProposalStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ChainIndexingProposalStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      chainIndexingProposalStatus_.WriteTo(output, _map_chainIndexingProposalStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += chainIndexingProposalStatus_.CalculateSize(_map_chainIndexingProposalStatus_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetIndexingProposalStatusOutput other) {
      if (other == null) {
        return;
      }
      chainIndexingProposalStatus_.Add(other.chainIndexingProposalStatus_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            chainIndexingProposalStatus_.AddEntriesFrom(input, _map_chainIndexingProposalStatus_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PendingChainIndexingProposalStatus : pb::IMessage<PendingChainIndexingProposalStatus> {
    private static readonly pb::MessageParser<PendingChainIndexingProposalStatus> _parser = new pb::MessageParser<PendingChainIndexingProposalStatus>(() => new PendingChainIndexingProposalStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PendingChainIndexingProposalStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PendingChainIndexingProposalStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PendingChainIndexingProposalStatus(PendingChainIndexingProposalStatus other) : this() {
      proposalId_ = other.proposalId_ != null ? other.proposalId_.Clone() : null;
      proposer_ = other.proposer_ != null ? other.proposer_.Clone() : null;
      toBeReleased_ = other.toBeReleased_;
      proposedCrossChainBlockData_ = other.proposedCrossChainBlockData_ != null ? other.proposedCrossChainBlockData_.Clone() : null;
      expiredTime_ = other.expiredTime_ != null ? other.expiredTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PendingChainIndexingProposalStatus Clone() {
      return new PendingChainIndexingProposalStatus(this);
    }

    /// <summary>Field number for the "proposal_id" field.</summary>
    public const int ProposalIdFieldNumber = 1;
    private global::AElf.Types.Hash proposalId_;
    /// <summary>
    /// The id of cross chain indexing proposal. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash ProposalId {
      get { return proposalId_; }
      set {
        proposalId_ = value;
      }
    }

    /// <summary>Field number for the "proposer" field.</summary>
    public const int ProposerFieldNumber = 2;
    private global::AElf.Types.Address proposer_;
    /// <summary>
    /// The proposer of cross chain indexing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Proposer {
      get { return proposer_; }
      set {
        proposer_ = value;
      }
    }

    /// <summary>Field number for the "to_be_released" field.</summary>
    public const int ToBeReleasedFieldNumber = 3;
    private bool toBeReleased_;
    /// <summary>
    /// True if the proposal can be released, otherwise false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ToBeReleased {
      get { return toBeReleased_; }
      set {
        toBeReleased_ = value;
      }
    }

    /// <summary>Field number for the "proposed_cross_chain_block_data" field.</summary>
    public const int ProposedCrossChainBlockDataFieldNumber = 4;
    private global::AElf.Standards.ACS7.CrossChainBlockData proposedCrossChainBlockData_;
    /// <summary>
    /// The cross chain data proposed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Standards.ACS7.CrossChainBlockData ProposedCrossChainBlockData {
      get { return proposedCrossChainBlockData_; }
      set {
        proposedCrossChainBlockData_ = value;
      }
    }

    /// <summary>Field number for the "expired_time" field.</summary>
    public const int ExpiredTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expiredTime_;
    /// <summary>
    /// The proposal expiration time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpiredTime {
      get { return expiredTime_; }
      set {
        expiredTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PendingChainIndexingProposalStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PendingChainIndexingProposalStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ProposalId, other.ProposalId)) return false;
      if (!object.Equals(Proposer, other.Proposer)) return false;
      if (ToBeReleased != other.ToBeReleased) return false;
      if (!object.Equals(ProposedCrossChainBlockData, other.ProposedCrossChainBlockData)) return false;
      if (!object.Equals(ExpiredTime, other.ExpiredTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (proposalId_ != null) hash ^= ProposalId.GetHashCode();
      if (proposer_ != null) hash ^= Proposer.GetHashCode();
      if (ToBeReleased != false) hash ^= ToBeReleased.GetHashCode();
      if (proposedCrossChainBlockData_ != null) hash ^= ProposedCrossChainBlockData.GetHashCode();
      if (expiredTime_ != null) hash ^= ExpiredTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (proposalId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProposalId);
      }
      if (proposer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Proposer);
      }
      if (ToBeReleased != false) {
        output.WriteRawTag(24);
        output.WriteBool(ToBeReleased);
      }
      if (proposedCrossChainBlockData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ProposedCrossChainBlockData);
      }
      if (expiredTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExpiredTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (proposalId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProposalId);
      }
      if (proposer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proposer);
      }
      if (ToBeReleased != false) {
        size += 1 + 1;
      }
      if (proposedCrossChainBlockData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProposedCrossChainBlockData);
      }
      if (expiredTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpiredTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PendingChainIndexingProposalStatus other) {
      if (other == null) {
        return;
      }
      if (other.proposalId_ != null) {
        if (proposalId_ == null) {
          ProposalId = new global::AElf.Types.Hash();
        }
        ProposalId.MergeFrom(other.ProposalId);
      }
      if (other.proposer_ != null) {
        if (proposer_ == null) {
          Proposer = new global::AElf.Types.Address();
        }
        Proposer.MergeFrom(other.Proposer);
      }
      if (other.ToBeReleased != false) {
        ToBeReleased = other.ToBeReleased;
      }
      if (other.proposedCrossChainBlockData_ != null) {
        if (proposedCrossChainBlockData_ == null) {
          ProposedCrossChainBlockData = new global::AElf.Standards.ACS7.CrossChainBlockData();
        }
        ProposedCrossChainBlockData.MergeFrom(other.ProposedCrossChainBlockData);
      }
      if (other.expiredTime_ != null) {
        if (expiredTime_ == null) {
          ExpiredTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpiredTime.MergeFrom(other.ExpiredTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (proposalId_ == null) {
              ProposalId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(ProposalId);
            break;
          }
          case 18: {
            if (proposer_ == null) {
              Proposer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Proposer);
            break;
          }
          case 24: {
            ToBeReleased = input.ReadBool();
            break;
          }
          case 34: {
            if (proposedCrossChainBlockData_ == null) {
              ProposedCrossChainBlockData = new global::AElf.Standards.ACS7.CrossChainBlockData();
            }
            input.ReadMessage(ProposedCrossChainBlockData);
            break;
          }
          case 42: {
            if (expiredTime_ == null) {
              ExpiredTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpiredTime);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetPendingCrossChainIndexingProposalOutput : pb::IMessage<GetPendingCrossChainIndexingProposalOutput> {
    private static readonly pb::MessageParser<GetPendingCrossChainIndexingProposalOutput> _parser = new pb::MessageParser<GetPendingCrossChainIndexingProposalOutput>(() => new GetPendingCrossChainIndexingProposalOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPendingCrossChainIndexingProposalOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPendingCrossChainIndexingProposalOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPendingCrossChainIndexingProposalOutput(GetPendingCrossChainIndexingProposalOutput other) : this() {
      proposalId_ = other.proposalId_ != null ? other.proposalId_.Clone() : null;
      proposer_ = other.proposer_ != null ? other.proposer_.Clone() : null;
      toBeReleased_ = other.toBeReleased_;
      proposedCrossChainBlockData_ = other.proposedCrossChainBlockData_ != null ? other.proposedCrossChainBlockData_.Clone() : null;
      expiredTime_ = other.expiredTime_ != null ? other.expiredTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPendingCrossChainIndexingProposalOutput Clone() {
      return new GetPendingCrossChainIndexingProposalOutput(this);
    }

    /// <summary>Field number for the "proposal_id" field.</summary>
    public const int ProposalIdFieldNumber = 1;
    private global::AElf.Types.Hash proposalId_;
    /// <summary>
    /// The proposal id of cross chain indexing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Hash ProposalId {
      get { return proposalId_; }
      set {
        proposalId_ = value;
      }
    }

    /// <summary>Field number for the "proposer" field.</summary>
    public const int ProposerFieldNumber = 2;
    private global::AElf.Types.Address proposer_;
    /// <summary>
    /// The proposer of cross chain indexing proposal.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Proposer {
      get { return proposer_; }
      set {
        proposer_ = value;
      }
    }

    /// <summary>Field number for the "to_be_released" field.</summary>
    public const int ToBeReleasedFieldNumber = 3;
    private bool toBeReleased_;
    /// <summary>
    /// True if the proposal can be released, otherwise false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ToBeReleased {
      get { return toBeReleased_; }
      set {
        toBeReleased_ = value;
      }
    }

    /// <summary>Field number for the "proposed_cross_chain_block_data" field.</summary>
    public const int ProposedCrossChainBlockDataFieldNumber = 4;
    private global::AElf.Standards.ACS7.CrossChainBlockData proposedCrossChainBlockData_;
    /// <summary>
    /// The cross chain data proposed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Standards.ACS7.CrossChainBlockData ProposedCrossChainBlockData {
      get { return proposedCrossChainBlockData_; }
      set {
        proposedCrossChainBlockData_ = value;
      }
    }

    /// <summary>Field number for the "expired_time" field.</summary>
    public const int ExpiredTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expiredTime_;
    /// <summary>
    /// The proposal expiration time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpiredTime {
      get { return expiredTime_; }
      set {
        expiredTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPendingCrossChainIndexingProposalOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPendingCrossChainIndexingProposalOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ProposalId, other.ProposalId)) return false;
      if (!object.Equals(Proposer, other.Proposer)) return false;
      if (ToBeReleased != other.ToBeReleased) return false;
      if (!object.Equals(ProposedCrossChainBlockData, other.ProposedCrossChainBlockData)) return false;
      if (!object.Equals(ExpiredTime, other.ExpiredTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (proposalId_ != null) hash ^= ProposalId.GetHashCode();
      if (proposer_ != null) hash ^= Proposer.GetHashCode();
      if (ToBeReleased != false) hash ^= ToBeReleased.GetHashCode();
      if (proposedCrossChainBlockData_ != null) hash ^= ProposedCrossChainBlockData.GetHashCode();
      if (expiredTime_ != null) hash ^= ExpiredTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (proposalId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ProposalId);
      }
      if (proposer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Proposer);
      }
      if (ToBeReleased != false) {
        output.WriteRawTag(24);
        output.WriteBool(ToBeReleased);
      }
      if (proposedCrossChainBlockData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ProposedCrossChainBlockData);
      }
      if (expiredTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExpiredTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (proposalId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProposalId);
      }
      if (proposer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proposer);
      }
      if (ToBeReleased != false) {
        size += 1 + 1;
      }
      if (proposedCrossChainBlockData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProposedCrossChainBlockData);
      }
      if (expiredTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpiredTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPendingCrossChainIndexingProposalOutput other) {
      if (other == null) {
        return;
      }
      if (other.proposalId_ != null) {
        if (proposalId_ == null) {
          ProposalId = new global::AElf.Types.Hash();
        }
        ProposalId.MergeFrom(other.ProposalId);
      }
      if (other.proposer_ != null) {
        if (proposer_ == null) {
          Proposer = new global::AElf.Types.Address();
        }
        Proposer.MergeFrom(other.Proposer);
      }
      if (other.ToBeReleased != false) {
        ToBeReleased = other.ToBeReleased;
      }
      if (other.proposedCrossChainBlockData_ != null) {
        if (proposedCrossChainBlockData_ == null) {
          ProposedCrossChainBlockData = new global::AElf.Standards.ACS7.CrossChainBlockData();
        }
        ProposedCrossChainBlockData.MergeFrom(other.ProposedCrossChainBlockData);
      }
      if (other.expiredTime_ != null) {
        if (expiredTime_ == null) {
          ExpiredTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpiredTime.MergeFrom(other.ExpiredTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (proposalId_ == null) {
              ProposalId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(ProposalId);
            break;
          }
          case 18: {
            if (proposer_ == null) {
              Proposer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Proposer);
            break;
          }
          case 24: {
            ToBeReleased = input.ReadBool();
            break;
          }
          case 34: {
            if (proposedCrossChainBlockData_ == null) {
              ProposedCrossChainBlockData = new global::AElf.Standards.ACS7.CrossChainBlockData();
            }
            input.ReadMessage(ProposedCrossChainBlockData);
            break;
          }
          case 42: {
            if (expiredTime_ == null) {
              ExpiredTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpiredTime);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SideChainInfo : pb::IMessage<SideChainInfo> {
    private static readonly pb::MessageParser<SideChainInfo> _parser = new pb::MessageParser<SideChainInfo>(() => new SideChainInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SideChainInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainInfo(SideChainInfo other) : this() {
      proposer_ = other.proposer_ != null ? other.proposer_.Clone() : null;
      sideChainStatus_ = other.sideChainStatus_;
      sideChainId_ = other.sideChainId_;
      creationTimestamp_ = other.creationTimestamp_ != null ? other.creationTimestamp_.Clone() : null;
      creationHeightOnParentChain_ = other.creationHeightOnParentChain_;
      indexingPrice_ = other.indexingPrice_;
      isPrivilegePreserved_ = other.isPrivilegePreserved_;
      arrearsInfo_ = other.arrearsInfo_.Clone();
      indexingFeeController_ = other.indexingFeeController_ != null ? other.indexingFeeController_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainInfo Clone() {
      return new SideChainInfo(this);
    }

    /// <summary>Field number for the "proposer" field.</summary>
    public const int ProposerFieldNumber = 1;
    private global::AElf.Types.Address proposer_;
    /// <summary>
    /// The proposer who propose to create the side chain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Proposer {
      get { return proposer_; }
      set {
        proposer_ = value;
      }
    }

    /// <summary>Field number for the "side_chain_status" field.</summary>
    public const int SideChainStatusFieldNumber = 2;
    private global::AElf.Contracts.CrossChain.SideChainStatus sideChainStatus_ = global::AElf.Contracts.CrossChain.SideChainStatus.Fatal;
    /// <summary>
    /// The status of side chain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Contracts.CrossChain.SideChainStatus SideChainStatus {
      get { return sideChainStatus_; }
      set {
        sideChainStatus_ = value;
      }
    }

    /// <summary>Field number for the "side_chain_id" field.</summary>
    public const int SideChainIdFieldNumber = 3;
    private int sideChainId_;
    /// <summary>
    /// The side chain id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SideChainId {
      get { return sideChainId_; }
      set {
        sideChainId_ = value;
      }
    }

    /// <summary>Field number for the "creation_timestamp" field.</summary>
    public const int CreationTimestampFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp creationTimestamp_;
    /// <summary>
    /// The time of side chain created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreationTimestamp {
      get { return creationTimestamp_; }
      set {
        creationTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "creation_height_on_parent_chain" field.</summary>
    public const int CreationHeightOnParentChainFieldNumber = 5;
    private long creationHeightOnParentChain_;
    /// <summary>
    /// The height of side chain created on parent chain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreationHeightOnParentChain {
      get { return creationHeightOnParentChain_; }
      set {
        creationHeightOnParentChain_ = value;
      }
    }

    /// <summary>Field number for the "indexing_price" field.</summary>
    public const int IndexingPriceFieldNumber = 6;
    private long indexingPrice_;
    /// <summary>
    /// The price of indexing fee.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IndexingPrice {
      get { return indexingPrice_; }
      set {
        indexingPrice_ = value;
      }
    }

    /// <summary>Field number for the "is_privilege_preserved" field.</summary>
    public const int IsPrivilegePreservedFieldNumber = 7;
    private bool isPrivilegePreserved_;
    /// <summary>
    /// True if chain privilege needed, otherwise false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPrivilegePreserved {
      get { return isPrivilegePreserved_; }
      set {
        isPrivilegePreserved_ = value;
      }
    }

    /// <summary>Field number for the "arrears_info" field.</summary>
    public const int ArrearsInfoFieldNumber = 8;
    private static readonly pbc::MapField<string, long>.Codec _map_arrearsInfo_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 66);
    private readonly pbc::MapField<string, long> arrearsInfo_ = new pbc::MapField<string, long>();
    /// <summary>
    /// creditor and amounts for the chain indexing fee debt 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> ArrearsInfo {
      get { return arrearsInfo_; }
    }

    /// <summary>Field number for the "indexing_fee_controller" field.</summary>
    public const int IndexingFeeControllerFieldNumber = 9;
    private global::AuthorityInfo indexingFeeController_;
    /// <summary>
    /// The controller of indexing fee.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AuthorityInfo IndexingFeeController {
      get { return indexingFeeController_; }
      set {
        indexingFeeController_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SideChainInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SideChainInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Proposer, other.Proposer)) return false;
      if (SideChainStatus != other.SideChainStatus) return false;
      if (SideChainId != other.SideChainId) return false;
      if (!object.Equals(CreationTimestamp, other.CreationTimestamp)) return false;
      if (CreationHeightOnParentChain != other.CreationHeightOnParentChain) return false;
      if (IndexingPrice != other.IndexingPrice) return false;
      if (IsPrivilegePreserved != other.IsPrivilegePreserved) return false;
      if (!ArrearsInfo.Equals(other.ArrearsInfo)) return false;
      if (!object.Equals(IndexingFeeController, other.IndexingFeeController)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (proposer_ != null) hash ^= Proposer.GetHashCode();
      if (SideChainStatus != global::AElf.Contracts.CrossChain.SideChainStatus.Fatal) hash ^= SideChainStatus.GetHashCode();
      if (SideChainId != 0) hash ^= SideChainId.GetHashCode();
      if (creationTimestamp_ != null) hash ^= CreationTimestamp.GetHashCode();
      if (CreationHeightOnParentChain != 0L) hash ^= CreationHeightOnParentChain.GetHashCode();
      if (IndexingPrice != 0L) hash ^= IndexingPrice.GetHashCode();
      if (IsPrivilegePreserved != false) hash ^= IsPrivilegePreserved.GetHashCode();
      hash ^= ArrearsInfo.GetHashCode();
      if (indexingFeeController_ != null) hash ^= IndexingFeeController.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (proposer_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Proposer);
      }
      if (SideChainStatus != global::AElf.Contracts.CrossChain.SideChainStatus.Fatal) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SideChainStatus);
      }
      if (SideChainId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SideChainId);
      }
      if (creationTimestamp_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreationTimestamp);
      }
      if (CreationHeightOnParentChain != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CreationHeightOnParentChain);
      }
      if (IndexingPrice != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(IndexingPrice);
      }
      if (IsPrivilegePreserved != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsPrivilegePreserved);
      }
      arrearsInfo_.WriteTo(output, _map_arrearsInfo_codec);
      if (indexingFeeController_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(IndexingFeeController);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (proposer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proposer);
      }
      if (SideChainStatus != global::AElf.Contracts.CrossChain.SideChainStatus.Fatal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SideChainStatus);
      }
      if (SideChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SideChainId);
      }
      if (creationTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreationTimestamp);
      }
      if (CreationHeightOnParentChain != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreationHeightOnParentChain);
      }
      if (IndexingPrice != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IndexingPrice);
      }
      if (IsPrivilegePreserved != false) {
        size += 1 + 1;
      }
      size += arrearsInfo_.CalculateSize(_map_arrearsInfo_codec);
      if (indexingFeeController_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IndexingFeeController);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SideChainInfo other) {
      if (other == null) {
        return;
      }
      if (other.proposer_ != null) {
        if (proposer_ == null) {
          Proposer = new global::AElf.Types.Address();
        }
        Proposer.MergeFrom(other.Proposer);
      }
      if (other.SideChainStatus != global::AElf.Contracts.CrossChain.SideChainStatus.Fatal) {
        SideChainStatus = other.SideChainStatus;
      }
      if (other.SideChainId != 0) {
        SideChainId = other.SideChainId;
      }
      if (other.creationTimestamp_ != null) {
        if (creationTimestamp_ == null) {
          CreationTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreationTimestamp.MergeFrom(other.CreationTimestamp);
      }
      if (other.CreationHeightOnParentChain != 0L) {
        CreationHeightOnParentChain = other.CreationHeightOnParentChain;
      }
      if (other.IndexingPrice != 0L) {
        IndexingPrice = other.IndexingPrice;
      }
      if (other.IsPrivilegePreserved != false) {
        IsPrivilegePreserved = other.IsPrivilegePreserved;
      }
      arrearsInfo_.Add(other.arrearsInfo_);
      if (other.indexingFeeController_ != null) {
        if (indexingFeeController_ == null) {
          IndexingFeeController = new global::AuthorityInfo();
        }
        IndexingFeeController.MergeFrom(other.IndexingFeeController);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (proposer_ == null) {
              Proposer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Proposer);
            break;
          }
          case 16: {
            SideChainStatus = (global::AElf.Contracts.CrossChain.SideChainStatus) input.ReadEnum();
            break;
          }
          case 24: {
            SideChainId = input.ReadInt32();
            break;
          }
          case 34: {
            if (creationTimestamp_ == null) {
              CreationTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreationTimestamp);
            break;
          }
          case 40: {
            CreationHeightOnParentChain = input.ReadInt64();
            break;
          }
          case 48: {
            IndexingPrice = input.ReadInt64();
            break;
          }
          case 56: {
            IsPrivilegePreserved = input.ReadBool();
            break;
          }
          case 66: {
            arrearsInfo_.AddEntriesFrom(input, _map_arrearsInfo_codec);
            break;
          }
          case 74: {
            if (indexingFeeController_ == null) {
              IndexingFeeController = new global::AuthorityInfo();
            }
            input.ReadMessage(IndexingFeeController);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetChainStatusOutput : pb::IMessage<GetChainStatusOutput> {
    private static readonly pb::MessageParser<GetChainStatusOutput> _parser = new pb::MessageParser<GetChainStatusOutput>(() => new GetChainStatusOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetChainStatusOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChainStatusOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChainStatusOutput(GetChainStatusOutput other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChainStatusOutput Clone() {
      return new GetChainStatusOutput(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::AElf.Contracts.CrossChain.SideChainStatus status_ = global::AElf.Contracts.CrossChain.SideChainStatus.Fatal;
    /// <summary>
    /// The status of side chain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Contracts.CrossChain.SideChainStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetChainStatusOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetChainStatusOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != global::AElf.Contracts.CrossChain.SideChainStatus.Fatal) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != global::AElf.Contracts.CrossChain.SideChainStatus.Fatal) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != global::AElf.Contracts.CrossChain.SideChainStatus.Fatal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetChainStatusOutput other) {
      if (other == null) {
        return;
      }
      if (other.Status != global::AElf.Contracts.CrossChain.SideChainStatus.Fatal) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::AElf.Contracts.CrossChain.SideChainStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SideChainCreationRequestState : pb::IMessage<SideChainCreationRequestState> {
    private static readonly pb::MessageParser<SideChainCreationRequestState> _parser = new pb::MessageParser<SideChainCreationRequestState>(() => new SideChainCreationRequestState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SideChainCreationRequestState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainCreationRequestState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainCreationRequestState(SideChainCreationRequestState other) : this() {
      sideChainCreationRequest_ = other.sideChainCreationRequest_ != null ? other.sideChainCreationRequest_.Clone() : null;
      expiredTime_ = other.expiredTime_ != null ? other.expiredTime_.Clone() : null;
      proposer_ = other.proposer_ != null ? other.proposer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainCreationRequestState Clone() {
      return new SideChainCreationRequestState(this);
    }

    /// <summary>Field number for the "side_chain_creation_request" field.</summary>
    public const int SideChainCreationRequestFieldNumber = 1;
    private global::AElf.Standards.ACS7.SideChainCreationRequest sideChainCreationRequest_;
    /// <summary>
    /// The parameters of creating side chain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Standards.ACS7.SideChainCreationRequest SideChainCreationRequest {
      get { return sideChainCreationRequest_; }
      set {
        sideChainCreationRequest_ = value;
      }
    }

    /// <summary>Field number for the "expired_time" field.</summary>
    public const int ExpiredTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expiredTime_;
    /// <summary>
    /// The expiration date of the proposal.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpiredTime {
      get { return expiredTime_; }
      set {
        expiredTime_ = value;
      }
    }

    /// <summary>Field number for the "proposer" field.</summary>
    public const int ProposerFieldNumber = 3;
    private global::AElf.Types.Address proposer_;
    /// <summary>
    /// The proposer who proposed to create the side chain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AElf.Types.Address Proposer {
      get { return proposer_; }
      set {
        proposer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SideChainCreationRequestState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SideChainCreationRequestState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SideChainCreationRequest, other.SideChainCreationRequest)) return false;
      if (!object.Equals(ExpiredTime, other.ExpiredTime)) return false;
      if (!object.Equals(Proposer, other.Proposer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sideChainCreationRequest_ != null) hash ^= SideChainCreationRequest.GetHashCode();
      if (expiredTime_ != null) hash ^= ExpiredTime.GetHashCode();
      if (proposer_ != null) hash ^= Proposer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sideChainCreationRequest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SideChainCreationRequest);
      }
      if (expiredTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ExpiredTime);
      }
      if (proposer_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Proposer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sideChainCreationRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SideChainCreationRequest);
      }
      if (expiredTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpiredTime);
      }
      if (proposer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Proposer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SideChainCreationRequestState other) {
      if (other == null) {
        return;
      }
      if (other.sideChainCreationRequest_ != null) {
        if (sideChainCreationRequest_ == null) {
          SideChainCreationRequest = new global::AElf.Standards.ACS7.SideChainCreationRequest();
        }
        SideChainCreationRequest.MergeFrom(other.SideChainCreationRequest);
      }
      if (other.expiredTime_ != null) {
        if (expiredTime_ == null) {
          ExpiredTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpiredTime.MergeFrom(other.ExpiredTime);
      }
      if (other.proposer_ != null) {
        if (proposer_ == null) {
          Proposer = new global::AElf.Types.Address();
        }
        Proposer.MergeFrom(other.Proposer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (sideChainCreationRequest_ == null) {
              SideChainCreationRequest = new global::AElf.Standards.ACS7.SideChainCreationRequest();
            }
            input.ReadMessage(SideChainCreationRequest);
            break;
          }
          case 18: {
            if (expiredTime_ == null) {
              ExpiredTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpiredTime);
            break;
          }
          case 26: {
            if (proposer_ == null) {
              Proposer = new global::AElf.Types.Address();
            }
            input.ReadMessage(Proposer);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangeSideChainIndexingFeeControllerInput : pb::IMessage<ChangeSideChainIndexingFeeControllerInput> {
    private static readonly pb::MessageParser<ChangeSideChainIndexingFeeControllerInput> _parser = new pb::MessageParser<ChangeSideChainIndexingFeeControllerInput>(() => new ChangeSideChainIndexingFeeControllerInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeSideChainIndexingFeeControllerInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeSideChainIndexingFeeControllerInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeSideChainIndexingFeeControllerInput(ChangeSideChainIndexingFeeControllerInput other) : this() {
      chainId_ = other.chainId_;
      authorityInfo_ = other.authorityInfo_ != null ? other.authorityInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeSideChainIndexingFeeControllerInput Clone() {
      return new ChangeSideChainIndexingFeeControllerInput(this);
    }

    /// <summary>Field number for the "chain_id" field.</summary>
    public const int ChainIdFieldNumber = 1;
    private int chainId_;
    /// <summary>
    /// The side chain id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChainId {
      get { return chainId_; }
      set {
        chainId_ = value;
      }
    }

    /// <summary>Field number for the "authority_info" field.</summary>
    public const int AuthorityInfoFieldNumber = 2;
    private global::AuthorityInfo authorityInfo_;
    /// <summary>
    /// The changed controller of indexing fee.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AuthorityInfo AuthorityInfo {
      get { return authorityInfo_; }
      set {
        authorityInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeSideChainIndexingFeeControllerInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeSideChainIndexingFeeControllerInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChainId != other.ChainId) return false;
      if (!object.Equals(AuthorityInfo, other.AuthorityInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChainId != 0) hash ^= ChainId.GetHashCode();
      if (authorityInfo_ != null) hash ^= AuthorityInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChainId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChainId);
      }
      if (authorityInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AuthorityInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChainId);
      }
      if (authorityInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthorityInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeSideChainIndexingFeeControllerInput other) {
      if (other == null) {
        return;
      }
      if (other.ChainId != 0) {
        ChainId = other.ChainId;
      }
      if (other.authorityInfo_ != null) {
        if (authorityInfo_ == null) {
          AuthorityInfo = new global::AuthorityInfo();
        }
        AuthorityInfo.MergeFrom(other.AuthorityInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChainId = input.ReadInt32();
            break;
          }
          case 18: {
            if (authorityInfo_ == null) {
              AuthorityInfo = new global::AuthorityInfo();
            }
            input.ReadMessage(AuthorityInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SideChainLifetimeControllerChanged : pb::IMessage<SideChainLifetimeControllerChanged> {
    private static readonly pb::MessageParser<SideChainLifetimeControllerChanged> _parser = new pb::MessageParser<SideChainLifetimeControllerChanged>(() => new SideChainLifetimeControllerChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SideChainLifetimeControllerChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainLifetimeControllerChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainLifetimeControllerChanged(SideChainLifetimeControllerChanged other) : this() {
      authorityInfo_ = other.authorityInfo_ != null ? other.authorityInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainLifetimeControllerChanged Clone() {
      return new SideChainLifetimeControllerChanged(this);
    }

    /// <summary>Field number for the "authority_info" field.</summary>
    public const int AuthorityInfoFieldNumber = 1;
    private global::AuthorityInfo authorityInfo_;
    /// <summary>
    /// The changed controller of side chain lifetime.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AuthorityInfo AuthorityInfo {
      get { return authorityInfo_; }
      set {
        authorityInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SideChainLifetimeControllerChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SideChainLifetimeControllerChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AuthorityInfo, other.AuthorityInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (authorityInfo_ != null) hash ^= AuthorityInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (authorityInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AuthorityInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (authorityInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthorityInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SideChainLifetimeControllerChanged other) {
      if (other == null) {
        return;
      }
      if (other.authorityInfo_ != null) {
        if (authorityInfo_ == null) {
          AuthorityInfo = new global::AuthorityInfo();
        }
        AuthorityInfo.MergeFrom(other.AuthorityInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (authorityInfo_ == null) {
              AuthorityInfo = new global::AuthorityInfo();
            }
            input.ReadMessage(AuthorityInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CrossChainIndexingControllerChanged : pb::IMessage<CrossChainIndexingControllerChanged> {
    private static readonly pb::MessageParser<CrossChainIndexingControllerChanged> _parser = new pb::MessageParser<CrossChainIndexingControllerChanged>(() => new CrossChainIndexingControllerChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrossChainIndexingControllerChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossChainIndexingControllerChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossChainIndexingControllerChanged(CrossChainIndexingControllerChanged other) : this() {
      authorityInfo_ = other.authorityInfo_ != null ? other.authorityInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrossChainIndexingControllerChanged Clone() {
      return new CrossChainIndexingControllerChanged(this);
    }

    /// <summary>Field number for the "authority_info" field.</summary>
    public const int AuthorityInfoFieldNumber = 1;
    private global::AuthorityInfo authorityInfo_;
    /// <summary>
    /// The changed controller of indexing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AuthorityInfo AuthorityInfo {
      get { return authorityInfo_; }
      set {
        authorityInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrossChainIndexingControllerChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrossChainIndexingControllerChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AuthorityInfo, other.AuthorityInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (authorityInfo_ != null) hash ^= AuthorityInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (authorityInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AuthorityInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (authorityInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthorityInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrossChainIndexingControllerChanged other) {
      if (other == null) {
        return;
      }
      if (other.authorityInfo_ != null) {
        if (authorityInfo_ == null) {
          AuthorityInfo = new global::AuthorityInfo();
        }
        AuthorityInfo.MergeFrom(other.AuthorityInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (authorityInfo_ == null) {
              AuthorityInfo = new global::AuthorityInfo();
            }
            input.ReadMessage(AuthorityInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SideChainIndexingFeeControllerChanged : pb::IMessage<SideChainIndexingFeeControllerChanged> {
    private static readonly pb::MessageParser<SideChainIndexingFeeControllerChanged> _parser = new pb::MessageParser<SideChainIndexingFeeControllerChanged>(() => new SideChainIndexingFeeControllerChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SideChainIndexingFeeControllerChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainIndexingFeeControllerChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainIndexingFeeControllerChanged(SideChainIndexingFeeControllerChanged other) : this() {
      chainId_ = other.chainId_;
      authorityInfo_ = other.authorityInfo_ != null ? other.authorityInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainIndexingFeeControllerChanged Clone() {
      return new SideChainIndexingFeeControllerChanged(this);
    }

    /// <summary>Field number for the "chain_id" field.</summary>
    public const int ChainIdFieldNumber = 1;
    private int chainId_;
    /// <summary>
    /// The side chain id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChainId {
      get { return chainId_; }
      set {
        chainId_ = value;
      }
    }

    /// <summary>Field number for the "authority_info" field.</summary>
    public const int AuthorityInfoFieldNumber = 2;
    private global::AuthorityInfo authorityInfo_;
    /// <summary>
    /// The changed controller of side chain indexing fee.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AuthorityInfo AuthorityInfo {
      get { return authorityInfo_; }
      set {
        authorityInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SideChainIndexingFeeControllerChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SideChainIndexingFeeControllerChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChainId != other.ChainId) return false;
      if (!object.Equals(AuthorityInfo, other.AuthorityInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChainId != 0) hash ^= ChainId.GetHashCode();
      if (authorityInfo_ != null) hash ^= AuthorityInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChainId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChainId);
      }
      if (authorityInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AuthorityInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChainId);
      }
      if (authorityInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthorityInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SideChainIndexingFeeControllerChanged other) {
      if (other == null) {
        return;
      }
      if (other.ChainId != 0) {
        ChainId = other.ChainId;
      }
      if (other.authorityInfo_ != null) {
        if (authorityInfo_ == null) {
          AuthorityInfo = new global::AuthorityInfo();
        }
        AuthorityInfo.MergeFrom(other.AuthorityInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChainId = input.ReadInt32();
            break;
          }
          case 18: {
            if (authorityInfo_ == null) {
              AuthorityInfo = new global::AuthorityInfo();
            }
            input.ReadMessage(AuthorityInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AcceptCrossChainIndexingProposalInput : pb::IMessage<AcceptCrossChainIndexingProposalInput> {
    private static readonly pb::MessageParser<AcceptCrossChainIndexingProposalInput> _parser = new pb::MessageParser<AcceptCrossChainIndexingProposalInput>(() => new AcceptCrossChainIndexingProposalInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcceptCrossChainIndexingProposalInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptCrossChainIndexingProposalInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptCrossChainIndexingProposalInput(AcceptCrossChainIndexingProposalInput other) : this() {
      chainId_ = other.chainId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptCrossChainIndexingProposalInput Clone() {
      return new AcceptCrossChainIndexingProposalInput(this);
    }

    /// <summary>Field number for the "chain_id" field.</summary>
    public const int ChainIdFieldNumber = 1;
    private int chainId_;
    /// <summary>
    /// The chain id of accepted indexing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChainId {
      get { return chainId_; }
      set {
        chainId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcceptCrossChainIndexingProposalInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcceptCrossChainIndexingProposalInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChainId != other.ChainId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChainId != 0) hash ^= ChainId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChainId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChainId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChainId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcceptCrossChainIndexingProposalInput other) {
      if (other == null) {
        return;
      }
      if (other.ChainId != 0) {
        ChainId = other.ChainId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChainId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SideChainIndexed : pb::IMessage<SideChainIndexed> {
    private static readonly pb::MessageParser<SideChainIndexed> _parser = new pb::MessageParser<SideChainIndexed>(() => new SideChainIndexed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SideChainIndexed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainIndexed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainIndexed(SideChainIndexed other) : this() {
      chainId_ = other.chainId_;
      indexedHeight_ = other.indexedHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideChainIndexed Clone() {
      return new SideChainIndexed(this);
    }

    /// <summary>Field number for the "chain_id" field.</summary>
    public const int ChainIdFieldNumber = 1;
    private int chainId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChainId {
      get { return chainId_; }
      set {
        chainId_ = value;
      }
    }

    /// <summary>Field number for the "indexed_height" field.</summary>
    public const int IndexedHeightFieldNumber = 2;
    private long indexedHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IndexedHeight {
      get { return indexedHeight_; }
      set {
        indexedHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SideChainIndexed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SideChainIndexed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChainId != other.ChainId) return false;
      if (IndexedHeight != other.IndexedHeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChainId != 0) hash ^= ChainId.GetHashCode();
      if (IndexedHeight != 0L) hash ^= IndexedHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChainId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChainId);
      }
      if (IndexedHeight != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(IndexedHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChainId);
      }
      if (IndexedHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IndexedHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SideChainIndexed other) {
      if (other == null) {
        return;
      }
      if (other.ChainId != 0) {
        ChainId = other.ChainId;
      }
      if (other.IndexedHeight != 0L) {
        IndexedHeight = other.IndexedHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChainId = input.ReadInt32();
            break;
          }
          case 16: {
            IndexedHeight = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParentChainIndexed : pb::IMessage<ParentChainIndexed> {
    private static readonly pb::MessageParser<ParentChainIndexed> _parser = new pb::MessageParser<ParentChainIndexed>(() => new ParentChainIndexed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParentChainIndexed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.CrossChain.CrossChainContractReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParentChainIndexed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParentChainIndexed(ParentChainIndexed other) : this() {
      chainId_ = other.chainId_;
      indexedHeight_ = other.indexedHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParentChainIndexed Clone() {
      return new ParentChainIndexed(this);
    }

    /// <summary>Field number for the "chain_id" field.</summary>
    public const int ChainIdFieldNumber = 1;
    private int chainId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChainId {
      get { return chainId_; }
      set {
        chainId_ = value;
      }
    }

    /// <summary>Field number for the "indexed_height" field.</summary>
    public const int IndexedHeightFieldNumber = 2;
    private long indexedHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IndexedHeight {
      get { return indexedHeight_; }
      set {
        indexedHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParentChainIndexed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParentChainIndexed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChainId != other.ChainId) return false;
      if (IndexedHeight != other.IndexedHeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChainId != 0) hash ^= ChainId.GetHashCode();
      if (IndexedHeight != 0L) hash ^= IndexedHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChainId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChainId);
      }
      if (IndexedHeight != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(IndexedHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChainId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChainId);
      }
      if (IndexedHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IndexedHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParentChainIndexed other) {
      if (other == null) {
        return;
      }
      if (other.ChainId != 0) {
        ChainId = other.ChainId;
      }
      if (other.IndexedHeight != 0L) {
        IndexedHeight = other.IndexedHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChainId = input.ReadInt32();
            break;
          }
          case 16: {
            IndexedHeight = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
