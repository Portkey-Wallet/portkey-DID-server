// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ca_contract_impl.proto
// </auto-generated>
// Original file comments:
// *
// CA contract.
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace Portkey.Contracts.CA {

  #region Events
  public partial class DefaultTokenTransferLimitChanged : aelf::IEvent<DefaultTokenTransferLimitChanged>
  {
    public global::System.Collections.Generic.IEnumerable<DefaultTokenTransferLimitChanged> GetIndexed()
    {
      return new List<DefaultTokenTransferLimitChanged>
      {
      };
    }

    public DefaultTokenTransferLimitChanged GetNonIndexed()
    {
      return new DefaultTokenTransferLimitChanged
      {
        Symbol = Symbol,
        DefaultLimit = DefaultLimit,
      };
    }
  }

  public partial class ForbiddenForwardCallContractMethodChanged : aelf::IEvent<ForbiddenForwardCallContractMethodChanged>
  {
    public global::System.Collections.Generic.IEnumerable<ForbiddenForwardCallContractMethodChanged> GetIndexed()
    {
      return new List<ForbiddenForwardCallContractMethodChanged>
      {
      };
    }

    public ForbiddenForwardCallContractMethodChanged GetNonIndexed()
    {
      return new ForbiddenForwardCallContractMethodChanged
      {
        MethodName = MethodName,
        Address = Address,
        Forbidden = Forbidden,
      };
    }
  }

  public partial class TransferLimitChanged : aelf::IEvent<TransferLimitChanged>
  {
    public global::System.Collections.Generic.IEnumerable<TransferLimitChanged> GetIndexed()
    {
      return new List<TransferLimitChanged>
      {
      new TransferLimitChanged
      {
        CaHash = CaHash
      },
      new TransferLimitChanged
      {
        Symbol = Symbol
      },
      new TransferLimitChanged
      {
        SingleLimit = SingleLimit
      },
      new TransferLimitChanged
      {
        DailyLimit = DailyLimit
      },
      };
    }

    public TransferLimitChanged GetNonIndexed()
    {
      return new TransferLimitChanged
      {
      };
    }
  }

  #endregion
}
#endregion

