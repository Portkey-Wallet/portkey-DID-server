// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: vote_contract.proto
// </auto-generated>
// Original file comments:
// *
// Vote contract.
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.Vote {

  #region Events
  public partial class Voted : aelf::IEvent<Voted>
  {
    public global::System.Collections.Generic.IEnumerable<Voted> GetIndexed()
    {
      return new List<Voted>
      {
      };
    }

    public Voted GetNonIndexed()
    {
      return new Voted
      {
        VotingItemId = VotingItemId,
        Voter = Voter,
        SnapshotNumber = SnapshotNumber,
        Amount = Amount,
        VoteTimestamp = VoteTimestamp,
        Option = Option,
        VoteId = VoteId,
      };
    }
  }

  public partial class Withdrawn : aelf::IEvent<Withdrawn>
  {
    public global::System.Collections.Generic.IEnumerable<Withdrawn> GetIndexed()
    {
      return new List<Withdrawn>
      {
      };
    }

    public Withdrawn GetNonIndexed()
    {
      return new Withdrawn
      {
        VoteId = VoteId,
      };
    }
  }

  public partial class VotingItemRegistered : aelf::IEvent<VotingItemRegistered>
  {
    public global::System.Collections.Generic.IEnumerable<VotingItemRegistered> GetIndexed()
    {
      return new List<VotingItemRegistered>
      {
      };
    }

    public VotingItemRegistered GetNonIndexed()
    {
      return new VotingItemRegistered
      {
        VotingItemId = VotingItemId,
        AcceptedCurrency = AcceptedCurrency,
        IsLockToken = IsLockToken,
        CurrentSnapshotNumber = CurrentSnapshotNumber,
        TotalSnapshotNumber = TotalSnapshotNumber,
        RegisterTimestamp = RegisterTimestamp,
        StartTimestamp = StartTimestamp,
        EndTimestamp = EndTimestamp,
        CurrentSnapshotStartTimestamp = CurrentSnapshotStartTimestamp,
        Sponsor = Sponsor,
        IsQuadratic = IsQuadratic,
        TicketCost = TicketCost,
      };
    }
  }

  #endregion
}
#endregion

