// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: red_packet_contract.proto
// </auto-generated>
// Original file comments:
// *
// RedPacketContract.proto
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace Portkey.Contracts.RedPacket {

  #region Events
  public partial class RedPacketCreated : aelf::IEvent<RedPacketCreated>
  {
    public global::System.Collections.Generic.IEnumerable<RedPacketCreated> GetIndexed()
    {
      return new List<RedPacketCreated>
      {
      };
    }

    public RedPacketCreated GetNonIndexed()
    {
      return new RedPacketCreated
      {
        FromSender = FromSender,
        RedPacketId = RedPacketId,
        RedPacketSymbol = RedPacketSymbol,
        TotalAmount = TotalAmount,
        TotalCount = TotalCount,
        RedPacketType = RedPacketType,
      };
    }
  }

  public partial class RedPacketReceived : aelf::IEvent<RedPacketReceived>
  {
    public global::System.Collections.Generic.IEnumerable<RedPacketReceived> GetIndexed()
    {
      return new List<RedPacketReceived>
      {
      };
    }

    public RedPacketReceived GetNonIndexed()
    {
      return new RedPacketReceived
      {
        FromSender = FromSender,
        RedPacketId = RedPacketId,
        RedPacketSymbol = RedPacketSymbol,
        Amount = Amount,
        ReceiverAddress = ReceiverAddress,
        IsSuccess = IsSuccess,
      };
    }
  }

  #endregion
  public static partial class RedPacketContractContainer
  {
    static readonly string __ServiceName = "RedPacketContract";

    #region Marshallers
    static readonly aelf::Marshaller<global::Portkey.Contracts.RedPacket.InitializeInput> __Marshaller_InitializeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Portkey.Contracts.RedPacket.InitializeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Portkey.Contracts.RedPacket.CreateRedPacketInput> __Marshaller_CreateRedPacketInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Portkey.Contracts.RedPacket.CreateRedPacketInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Portkey.Contracts.RedPacket.TransferRedPacketBatchInput> __Marshaller_TransferRedPacketBatchInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Portkey.Contracts.RedPacket.TransferRedPacketBatchInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Portkey.Contracts.RedPacket.GetRedPacketInput> __Marshaller_GetRedPacketInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Portkey.Contracts.RedPacket.GetRedPacketInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Portkey.Contracts.RedPacket.RedPacketOutput> __Marshaller_RedPacketOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Portkey.Contracts.RedPacket.RedPacketOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Portkey.Contracts.RedPacket.RedPacketMaxCountOutput> __Marshaller_RedPacketMaxCountOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Portkey.Contracts.RedPacket.RedPacketMaxCountOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Portkey.Contracts.RedPacket.SetRedPacketMaxCountInput> __Marshaller_SetRedPacketMaxCountInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Portkey.Contracts.RedPacket.SetRedPacketMaxCountInput.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::Portkey.Contracts.RedPacket.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Initialize = new aelf::Method<global::Portkey.Contracts.RedPacket.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Initialize",
        __Marshaller_InitializeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Portkey.Contracts.RedPacket.CreateRedPacketInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CreateRedPacket = new aelf::Method<global::Portkey.Contracts.RedPacket.CreateRedPacketInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CreateRedPacket",
        __Marshaller_CreateRedPacketInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Portkey.Contracts.RedPacket.TransferRedPacketBatchInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_TransferRedPacket = new aelf::Method<global::Portkey.Contracts.RedPacket.TransferRedPacketBatchInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "TransferRedPacket",
        __Marshaller_TransferRedPacketBatchInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Portkey.Contracts.RedPacket.GetRedPacketInput, global::Portkey.Contracts.RedPacket.RedPacketOutput> __Method_GetRedPacketInfo = new aelf::Method<global::Portkey.Contracts.RedPacket.GetRedPacketInput, global::Portkey.Contracts.RedPacket.RedPacketOutput>(
        aelf::MethodType.Action,
        __ServiceName,
        "GetRedPacketInfo",
        __Marshaller_GetRedPacketInput,
        __Marshaller_RedPacketOutput);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Portkey.Contracts.RedPacket.RedPacketMaxCountOutput> __Method_GetRedPacketMaxCount = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Portkey.Contracts.RedPacket.RedPacketMaxCountOutput>(
        aelf::MethodType.Action,
        __ServiceName,
        "GetRedPacketMaxCount",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_RedPacketMaxCountOutput);

    static readonly aelf::Method<global::Portkey.Contracts.RedPacket.SetRedPacketMaxCountInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetRedPacketMaxCount = new aelf::Method<global::Portkey.Contracts.RedPacket.SetRedPacketMaxCountInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetRedPacketMaxCount",
        __Marshaller_SetRedPacketMaxCountInput,
        __Marshaller_google_protobuf_Empty);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Portkey.Contracts.RedPacket.RedPacketContractReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::Portkey.Contracts.RedPacket.RedPacketContractReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of RedPacketContract</summary>
    public abstract partial class RedPacketContractBase : AElf.Sdk.CSharp.CSharpSmartContract<Portkey.Contracts.RedPacket.RedPacketContractState>
    {
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Initialize(global::Portkey.Contracts.RedPacket.InitializeInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty CreateRedPacket(global::Portkey.Contracts.RedPacket.CreateRedPacketInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty TransferRedPacket(global::Portkey.Contracts.RedPacket.TransferRedPacketBatchInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Portkey.Contracts.RedPacket.RedPacketOutput GetRedPacketInfo(global::Portkey.Contracts.RedPacket.GetRedPacketInput input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Portkey.Contracts.RedPacket.RedPacketMaxCountOutput GetRedPacketMaxCount(global::Google.Protobuf.WellKnownTypes.Empty input)
      {
        throw new global::System.NotImplementedException();
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetRedPacketMaxCount(global::Portkey.Contracts.RedPacket.SetRedPacketMaxCountInput input)
      {
        throw new global::System.NotImplementedException();
      }

    }

    public static aelf::ServerServiceDefinition BindService(RedPacketContractBase serviceImpl)
    {
      return aelf::ServerServiceDefinition.CreateBuilder()
          .AddDescriptors(Descriptors)
          .AddMethod(__Method_Initialize, serviceImpl.Initialize)
          .AddMethod(__Method_CreateRedPacket, serviceImpl.CreateRedPacket)
          .AddMethod(__Method_TransferRedPacket, serviceImpl.TransferRedPacket)
          .AddMethod(__Method_GetRedPacketInfo, serviceImpl.GetRedPacketInfo)
          .AddMethod(__Method_GetRedPacketMaxCount, serviceImpl.GetRedPacketMaxCount)
          .AddMethod(__Method_SetRedPacketMaxCount, serviceImpl.SetRedPacketMaxCount).Build();
    }

  }
}
#endregion

