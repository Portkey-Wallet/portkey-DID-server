// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: crypto_box_contract.proto
// </auto-generated>
// Original file comments:
// *
// CryptoBoxContract.proto
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace Portkey.Contracts.CryptoBox {

  #region Events
  public partial class CryptoBoxCreated : aelf::IEvent<CryptoBoxCreated>
  {
    public global::System.Collections.Generic.IEnumerable<CryptoBoxCreated> GetIndexed()
    {
      return new List<CryptoBoxCreated>
      {
      };
    }

    public CryptoBoxCreated GetNonIndexed()
    {
      return new CryptoBoxCreated
      {
        Sender = Sender,
        CryptoBoxId = CryptoBoxId,
        CryptoBoxSymbol = CryptoBoxSymbol,
        TotalAmount = TotalAmount,
        TotalCount = TotalCount,
        CryptoBoxType = CryptoBoxType,
        Receiver = Receiver,
      };
    }
  }

  public partial class CryptoBoxReceived : aelf::IEvent<CryptoBoxReceived>
  {
    public global::System.Collections.Generic.IEnumerable<CryptoBoxReceived> GetIndexed()
    {
      return new List<CryptoBoxReceived>
      {
      };
    }

    public CryptoBoxReceived GetNonIndexed()
    {
      return new CryptoBoxReceived
      {
        Sender = Sender,
        CryptoBoxId = CryptoBoxId,
        CryptoBoxSymbol = CryptoBoxSymbol,
        Amount = Amount,
        Receiver = Receiver,
        IsSuccess = IsSuccess,
      };
    }
  }

  public partial class CryptoBoxRefunded : aelf::IEvent<CryptoBoxRefunded>
  {
    public global::System.Collections.Generic.IEnumerable<CryptoBoxRefunded> GetIndexed()
    {
      return new List<CryptoBoxRefunded>
      {
      };
    }

    public CryptoBoxRefunded GetNonIndexed()
    {
      return new CryptoBoxRefunded
      {
        CryptoBoxId = CryptoBoxId,
        RefundAddress = RefundAddress,
        CryptoBoxSymbol = CryptoBoxSymbol,
        Amount = Amount,
      };
    }
  }

  public partial class TransferControllerAdded : aelf::IEvent<TransferControllerAdded>
  {
    public global::System.Collections.Generic.IEnumerable<TransferControllerAdded> GetIndexed()
    {
      return new List<TransferControllerAdded>
      {
      new TransferControllerAdded
      {
        Address = Address
      },
      };
    }

    public TransferControllerAdded GetNonIndexed()
    {
      return new TransferControllerAdded
      {
      };
    }
  }

  public partial class TransferControllerRemoved : aelf::IEvent<TransferControllerRemoved>
  {
    public global::System.Collections.Generic.IEnumerable<TransferControllerRemoved> GetIndexed()
    {
      return new List<TransferControllerRemoved>
      {
      new TransferControllerRemoved
      {
        Address = Address
      },
      };
    }

    public TransferControllerRemoved GetNonIndexed()
    {
      return new TransferControllerRemoved
      {
      };
    }
  }

  #endregion
  public static partial class CryptoBoxContractContainer
  {
    static readonly string __ServiceName = "CryptoBoxContract";

    #region Marshallers
    static readonly aelf::Marshaller<global::Portkey.Contracts.CryptoBox.InitializeInput> __Marshaller_InitializeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Portkey.Contracts.CryptoBox.InitializeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Portkey.Contracts.CryptoBox.CreateCryptoBoxInput> __Marshaller_CreateCryptoBoxInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Portkey.Contracts.CryptoBox.CreateCryptoBoxInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Portkey.Contracts.CryptoBox.TransferCryptoBoxBatchInput> __Marshaller_TransferCryptoBoxBatchInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Portkey.Contracts.CryptoBox.TransferCryptoBoxBatchInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Portkey.Contracts.CryptoBox.GetCryptoBoxInput> __Marshaller_GetCryptoBoxInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Portkey.Contracts.CryptoBox.GetCryptoBoxInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Portkey.Contracts.CryptoBox.GetCryptoBoxOutput> __Marshaller_GetCryptoBoxOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Portkey.Contracts.CryptoBox.GetCryptoBoxOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Portkey.Contracts.CryptoBox.GetCryptoBoxMaxCountOutput> __Marshaller_GetCryptoBoxMaxCountOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Portkey.Contracts.CryptoBox.GetCryptoBoxMaxCountOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Portkey.Contracts.CryptoBox.SetCryptoBoxMaxCountInput> __Marshaller_SetCryptoBoxMaxCountInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Portkey.Contracts.CryptoBox.SetCryptoBoxMaxCountInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Portkey.Contracts.CryptoBox.RefundCryptoBoxInput> __Marshaller_RefundCryptoBoxInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Portkey.Contracts.CryptoBox.RefundCryptoBoxInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Portkey.Contracts.CryptoBox.ControllerInput> __Marshaller_ControllerInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Portkey.Contracts.CryptoBox.ControllerInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Portkey.Contracts.CryptoBox.ControllerOutput> __Marshaller_ControllerOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Portkey.Contracts.CryptoBox.ControllerOutput.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::Portkey.Contracts.CryptoBox.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Initialize = new aelf::Method<global::Portkey.Contracts.CryptoBox.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Initialize",
        __Marshaller_InitializeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Portkey.Contracts.CryptoBox.CreateCryptoBoxInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CreateCryptoBox = new aelf::Method<global::Portkey.Contracts.CryptoBox.CreateCryptoBoxInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CreateCryptoBox",
        __Marshaller_CreateCryptoBoxInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Portkey.Contracts.CryptoBox.TransferCryptoBoxBatchInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_TransferCryptoBoxBatch = new aelf::Method<global::Portkey.Contracts.CryptoBox.TransferCryptoBoxBatchInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "TransferCryptoBoxBatch",
        __Marshaller_TransferCryptoBoxBatchInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Portkey.Contracts.CryptoBox.GetCryptoBoxInput, global::Portkey.Contracts.CryptoBox.GetCryptoBoxOutput> __Method_GetCryptoBoxInfo = new aelf::Method<global::Portkey.Contracts.CryptoBox.GetCryptoBoxInput, global::Portkey.Contracts.CryptoBox.GetCryptoBoxOutput>(
        aelf::MethodType.Action,
        __ServiceName,
        "GetCryptoBoxInfo",
        __Marshaller_GetCryptoBoxInput,
        __Marshaller_GetCryptoBoxOutput);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Portkey.Contracts.CryptoBox.GetCryptoBoxMaxCountOutput> __Method_GetCryptoBoxMaxCount = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Portkey.Contracts.CryptoBox.GetCryptoBoxMaxCountOutput>(
        aelf::MethodType.Action,
        __ServiceName,
        "GetCryptoBoxMaxCount",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_GetCryptoBoxMaxCountOutput);

    static readonly aelf::Method<global::Portkey.Contracts.CryptoBox.SetCryptoBoxMaxCountInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetCryptoBoxMaxCount = new aelf::Method<global::Portkey.Contracts.CryptoBox.SetCryptoBoxMaxCountInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetCryptoBoxMaxCount",
        __Marshaller_SetCryptoBoxMaxCountInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Portkey.Contracts.CryptoBox.RefundCryptoBoxInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RefundCryptoBox = new aelf::Method<global::Portkey.Contracts.CryptoBox.RefundCryptoBoxInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RefundCryptoBox",
        __Marshaller_RefundCryptoBoxInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Portkey.Contracts.CryptoBox.ControllerInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddTransferController = new aelf::Method<global::Portkey.Contracts.CryptoBox.ControllerInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AddTransferController",
        __Marshaller_ControllerInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Portkey.Contracts.CryptoBox.ControllerInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveTransferController = new aelf::Method<global::Portkey.Contracts.CryptoBox.ControllerInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RemoveTransferController",
        __Marshaller_ControllerInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Portkey.Contracts.CryptoBox.ControllerOutput> __Method_GetTransferControllers = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Portkey.Contracts.CryptoBox.ControllerOutput>(
        aelf::MethodType.View,
        __ServiceName,
        "GetTransferControllers",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_ControllerOutput);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Portkey.Contracts.CryptoBox.CryptoBoxContractReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS12.Acs12Reflection.Descriptor.Services[0],
          global::Portkey.Contracts.CryptoBox.CryptoBoxContractReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of CryptoBoxContract</summary>
    // public abstract partial class CryptoBoxContractBase : AElf.Sdk.CSharp.CSharpSmartContract<Portkey.Contracts.CryptoBox.CryptoBoxContractState>
    // {
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Initialize(global::Portkey.Contracts.CryptoBox.InitializeInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty CreateCryptoBox(global::Portkey.Contracts.CryptoBox.CreateCryptoBoxInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty TransferCryptoBoxBatch(global::Portkey.Contracts.CryptoBox.TransferCryptoBoxBatchInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Portkey.Contracts.CryptoBox.GetCryptoBoxOutput GetCryptoBoxInfo(global::Portkey.Contracts.CryptoBox.GetCryptoBoxInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Portkey.Contracts.CryptoBox.GetCryptoBoxMaxCountOutput GetCryptoBoxMaxCount(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetCryptoBoxMaxCount(global::Portkey.Contracts.CryptoBox.SetCryptoBoxMaxCountInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty RefundCryptoBox(global::Portkey.Contracts.CryptoBox.RefundCryptoBoxInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty AddTransferController(global::Portkey.Contracts.CryptoBox.ControllerInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveTransferController(global::Portkey.Contracts.CryptoBox.ControllerInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Portkey.Contracts.CryptoBox.ControllerOutput GetTransferControllers(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    // }

    // public static aelf::ServerServiceDefinition BindService(CryptoBoxContractBase serviceImpl)
    // {
    //   return aelf::ServerServiceDefinition.CreateBuilder()
    //       .AddDescriptors(Descriptors)
    //       .AddMethod(__Method_Initialize, serviceImpl.Initialize)
    //       .AddMethod(__Method_CreateCryptoBox, serviceImpl.CreateCryptoBox)
    //       .AddMethod(__Method_TransferCryptoBoxBatch, serviceImpl.TransferCryptoBoxBatch)
    //       .AddMethod(__Method_GetCryptoBoxInfo, serviceImpl.GetCryptoBoxInfo)
    //       .AddMethod(__Method_GetCryptoBoxMaxCount, serviceImpl.GetCryptoBoxMaxCount)
    //       .AddMethod(__Method_SetCryptoBoxMaxCount, serviceImpl.SetCryptoBoxMaxCount)
    //       .AddMethod(__Method_RefundCryptoBox, serviceImpl.RefundCryptoBox)
    //       .AddMethod(__Method_AddTransferController, serviceImpl.AddTransferController)
    //       .AddMethod(__Method_RemoveTransferController, serviceImpl.RemoveTransferController)
    //       .AddMethod(__Method_GetTransferControllers, serviceImpl.GetTransferControllers).Build();
    // }

  }
}
#endregion

